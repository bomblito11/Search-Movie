{"version":3,"file":"static/js/888.b6eac076.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviePage/MoviePage.module.css?f915","pages/MoviePage/MoviePage.jsx","utils/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCardContainer\":\"MoviePage_movieCardContainer__CPVkE\",\"backButton\":\"MoviePage_backButton__vXnae\",\"movieImg\":\"MoviePage_movieImg__zy7UV\",\"movieDetailsContainer\":\"MoviePage_movieDetailsContainer__FUB9-\",\"userScore\":\"MoviePage_userScore__wY9FS\",\"additionalInfoContainer\":\"MoviePage_additionalInfoContainer__Zlx3t\"};","import { getMovieDetails } from 'utils/api';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport css from './MoviePage.module.css';\n// import PropTypes from 'prop-types';\n\nconst MoviePage = () => {\n  const [title, setTitle] = useState('');\n  const [poster, setPoster] = useState('');\n  const [score, setScore] = useState(0);\n  const [overview, setOverview] = useState(`none`);\n  const [genres, setGenres] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const getMovieInfo = async id => {\n    const movie = await getMovieDetails(id);\n    setTitle(movie.title);\n    setPoster(`https://image.tmdb.org/t/p/w500${movie.poster_path}`);\n    setScore(Math.round(movie.vote_average * 100) / 100);\n    if (movie.overview) {\n      setOverview(movie.overview);\n    }\n\n    let genresArray = [];\n    movie.genres.map(genre => {\n      return (genresArray = [...genresArray, genre.name]);\n    });\n    setGenres(genresArray.join(', '));\n  };\n  useEffect(() => {\n    getMovieInfo(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref} state={{ from: location }}>\n        <button type=\"button\" className={css.backButton}>\n          ‚Üê Go back\n        </button>\n      </Link>\n      <div className={css.movieCardContainer}>\n        <img className={css.movieImg} src={poster} alt={`${title} poster`} />\n        <div className={css.movieDetailsContainer}>\n          <h1>{title}</h1>\n          <p>\n            User score: <span className={css.userScore}>{score}</span>\n          </p>\n          <h2>Overwiew</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n          <div className={css.additionalInfoContainer}>\n            <h3>Addiditonal information</h3>\n            <ul>\n              <li>\n                <Link to={'cast'} state={{ from: location.state.from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={'reviews'} state={{ from: location.state.from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\n// MoviePage.propTypes = {\n//   movieId: PropTypes.string,\n//   title: PropTypes.string.isRequired,\n//   poster: PropTypes.string.isRequired,\n//   score: PropTypes.number.isRequired,\n//   overview: PropTypes.string.isRequired,\n//   genres: PropTypes.string.isRequired,\n// };\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst API_KEY = '3a711e6a1a38cf2c1f9aa15317eef8a6';\n\nconst searchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  getTrending,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  searchMovie,\n};\n"],"names":["useState","title","setTitle","poster","setPoster","score","setScore","overview","setOverview","genres","setGenres","movieId","useParams","location","useLocation","backLinkHref","state","from","getMovieInfo","id","getMovieDetails","movie","poster_path","Math","round","vote_average","genresArray","map","genre","name","join","useEffect","to","type","className","css","src","alt","Suspense","fallback","API_KEY","searchMovie","query","axios","response","data","results","getTrending","getMovieCredits","getMovieReviews"],"sourceRoot":""}